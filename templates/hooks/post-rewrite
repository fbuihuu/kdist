#! /bin/bash
#
# This hook is used for bug tracking: if a rewritten commit is fixing
# a bug then the resulting commit should do so too.
#
warn () {
	echo >&2 "[kdist hook]: $*"
}

#
# Is this project tracks bugs at all ?
#
if test -z "$(kdist bug list-db 2>/dev/null | head -n1)"; then
	exit
fi

#
# Now forward registered bug fixes.
#
warn "propagating potential bug fixes to rebased branch..."

declare -i stat_errors=0

while read old new unused; do
	#
	# Calling kdist-bug--log is overkill here but the current api
	# doesn't allow to do otherwise.
	#
	for id in $(kdist bug log --format=name $old~1..$old); do
		kdist bug resolve -q $id $new
		case $? in
		0)
			# A local fix has been propagated or a local
			# commit cherry-picked from mainline is still
			# not part of the stable branch: nothing wrong
			# with that.
			;;
		*)
			# other are error
			warn "an error occured when registering $new as fix for $id"
			stat_errors+=1
		esac
	done
done

if test $stat_errors -gt 0; then
	warn "warning: $stat_errors error(s) occured when propagating fixes."
fi
