#! /bin/bash

SUMMARY="Show BUG information given a BUG id"

USAGE="[--help] [--decorate] [--format=compact|full|format:<fmt>] <bug-id>..."

format=full
decorate=no

while :
do
	case "$1" in
	-h|--he|--hel|--help)
		kdist__usage ;;
	--format=*)
		format=${1#--format=} ;;
	--decorate)
		decorate=yes ;;
	-*)
		kdist__usage ;;
	*)
		break
	esac
	shift
done

case $# in
0)	kdist__usage ;;
esac

declare -i i=0

bug_show__pretty_print () {
	local id=$1

	case $format in
	compact|full)
		test $i -gt 0        && echo
		echo "Name:       $id"
		test -n "$bug_url"   && echo "Url:        $bug_url"
		test -n "$bug_since" && echo "Since:      $bug_since"
		$bug_is_ignored      && echo "Ignored:    True"

		bug_db__find_all_fixes $id | while read sha1
		do
			echo -n "Fix:        $sha1"
			if test $decorate = yes; then
				echo -n " ($(git describe --contains --abbrev=0 $sha1))"
			fi
			echo
		done
		;;&
	full)
		if test -n "$bug_notes"; then
			echo
			echo "Notes:"
			while IFS='' read -r line; do
				echo "  $line"
			done <<<"$bug_notes"
		fi
		;;
	format:*)
		percent=false
		echo -n "${format#format:}" | while IFS='' read -n1 ch
		do
			if $percent; then
				case $ch in
				%)	printf '%%' ;;
				n)	printf '\n' ;;
				i)	printf '%s' "$id" ;;
				h)	printf '%s' $(bug_db__find_all_fixes $id) ;;
				s)	printf '%s' "$bug_since" ;;
				N)	printf '%s' "$bug_notes" ;;
				u)	printf '%s' "$bug_url" ;;
				*)	printf "%%$ch" # unknown placeholder
				esac
				percent=false
			else
				case $ch in
				%)	percent=true ;;
				*)	printf '%s' "$ch" ;;
				esac
			fi
		done
		;;
	esac
	i+=1
}

# needed when decorating fixes
kdist__cd_repository kernel

for id in $*
do
	bug_db__query_by_id $id ||
	exit

	bug_show__pretty_print $id
done
