#! /bin/bash

USAGE="create [--help]"


if test $# -ne 0; then
	usage
fi

kdist__cd_kernel_topdir &&
git__check_clean_work_tree &&
kdist__setup_kernel_version ||
exit

base=$(kdist__make_tag)

# At that point we know that the repo is clean so the
# scmversion indicates an exact match only.
tag=$(git describe --exact-match --match=$base-\* 2>/dev/null) &&
die "Your head is already released ($tag)"

#
# Pick up the kernel revision from the main Makefile then list the
# tags using the previous version as pattern and take the latest rev
# from the list.
#
last=$(kdist tag list -n1 $base-\*)
case "$last" in
"")	n=1;;
*)	n=$((${last##*-} + 1))
esac
tag=$(kdist__make_tag $n)

#
# Be sure to clean the tag made in the kdist repository if something
# wrong happen after.
#
tag__config_remove () {
	cd $(kdist__get_repository)
	git tag -d $1.1
}

echo -n "Tagging kernel with: $tag [Y/n]? "
read yesno
case "$yesno" in
[nN]|[nN][oO])	die "Aborted."
esac

echo -n "Tagging config with: $tag.1 [Y/n]? "
read yesno
case "$yesno" in
y|ye|yes)
	cd $(kdist__get_repository configs)
	git__check_clean_work_tree

	test -d $(kdist__config_version $tag)||
	die "Missing configs for kernel '$tag'."

	git__tag $tag.1 &&
	trap "tag__config_remove $tag" 0 ||
	exit
	cd - >/dev/null
esac

#
# Again, 'n' can be different from 'KERNEL_VERSION_PACKAGE + 1'
#
if test $KERNEL_VERSION_PACKAGE; then
	sed -ie "/EXTRAVERSION =/s/-$KERNEL_VERSION_PACKAGE/-$n/" Makefile
else
	sed -ie "s/EXTRAVERSION =.*/&-$n/" Makefile
fi ||
die "failed to update the top Makefile"

#
# Finally ask git to immortalizes the event
#
if ! git commit -qas -m "Mandriva Release $tag"; then
	git checkout -- Makefile
	die "git failed to commit the release."
fi
if ! git__tag $tag; then
	git reset -q --hard HEAD~1
	die "git failed to create the tag."
fi

trap - 0