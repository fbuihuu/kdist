#! /bin/bash

SUMMARY="Create a global project release"

USAGE="[--help]"


if test $# -gt 0; then
	usage
fi

cleanup_on_exit () {
	$cancel_commit && git reset --soft HEAD~1
	rm -f $tmpfile
}

tmpfile=$(mktemp)
cancel_commit=false
trap cleanup_on_exit 0

release__project () {
	local branch

	base=$(kdist__make_tag)
	kernel_tag=$(git describe --exact-match --match=$base-\* 2>/dev/null) ||
	die "kernel HEAD is not on a released commit."

	kdist__cd_topdir

	#
	# check that the current branch is the one used to track this
	# specific kernel version. If not, just exit and ask to the
	# user to resolve this.
	#
	branch=$(git symbolic-ref -q HEAD)
	[[ $kernel_tag = v${branch##*/}* ]] ||
	die "Your current branch is not the one used to track $base kernel serie."

	# Figure out the new release tag.
	last=$(kdist release list -n1 $base-\*)
	case $last in
	"")
		# Easy case: no release has been done for that kernel,
		# so it's a '1.1' one.
		tag=$kernel_tag.1 ;;
	*)
		# a kernel release already exists, we have to see if
		# the kernel release needs to be increased or only the
		# the build number.
		case $last in
		${kernel_tag}*)
			tag=$kernel_tag.$((${last##*.}+1)) ;;
		*)
			tag=$kernel_tag.1 ;;
		esac
	esac

	#
	# Create a temporary commit so kdist-log will include all
	# staged changes too. It will fail here if it's an empty
	# release.
	#
	# The temporary tag is for kdist-log to output the correct
	# project range.
	#
	# And release__get_parent() can be called even if we are
	# already on a released commit.
	#
	git commit -q -m "Release $tag" ||
	die "Failed to create temporary commit, aborted"
	cancel_commit=true

	git__tag $tag ||
	die "Failed to create temporary tag '$tag', aborted."

	# No parent release is not fatal, it just means that we're
	# making the very first one.
	case $last in
	"")	last=$(release__get_parent 2>/dev/null)
	esac

	cat >$tmpfile <<EOF
#
# You're about to make a new release that includes the
# changes described below.
#
# You can now inspect the changes and make improvements
# on the generated description.
#
Release $tag

This release has been created with the following
components:

$(kdist project status)

EOF
	if test $last; then
		cat <<EOF
Changes since $last are as follows:

$(kdist log --all)
EOF
	else
		cat <<EOF
No parent release was found.
EOF
	fi >>$tmpfile

	# Clean the temporary tag
	git tag -d $tag

	# Do the real commit. git-commit(1) does all the sanity
	# checkings on the log.
	git commit -qs --amend --edit --file=$tmpfile ||
	die "Failed to commit release."

	git__tag $tag ||
	die "Failed to create the tag, aborted."

	cancel_commit=false
}


kdist__cd_repository kernel &&
kdist__setup_kernel_version ||
exit

git__check_clean_work_tree ||
die "You must have a clean kernel working tree."

release__project "$@"