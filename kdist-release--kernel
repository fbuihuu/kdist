#! /bin/bash

SUMMARY="Create a new kernel release"

USAGE="[--help]"


if test $# -gt 0; then
	usage
fi

release__kernel () {
	local n
	local tmpfile=$(mktemp)
	trap "rm -f $tmpfile" 0

	#
	# Pick up the kernel revision from the main Makefile then list
	# the tags using it as pattern and take the latest rev from
	# the list.
	#
	base=$(kdist__make_tag)
	last=$(kdist release list -n1 $base-\*)
	case "$last" in
	"")	n=1;;
	*)	n=$((${last##*-} + 1))
	esac
	tag=$(kdist__make_tag $n)

	# We know that the kernel repo is clean so the scmversion
	# indicates an exact match only.
	git describe --exact-match --match=${tag%-*}-\* &>/dev/null && {
		warn "You're about to create an empty release."
		read -p "Please, confirm [N/y]?  " yesno
		case $yesno in y|yes) ;; *) die "Aborted." ;; esac
	}

	# 'n' can be different from 'KERNEL_VERSION_PACKAGE + 1'
	if test $KERNEL_VERSION_PACKAGE; then
		sed -i "/EXTRAVERSION =/s/-$KERNEL_VERSION_PACKAGE/-$n/" Makefile
	else
		sed -i "s/EXTRAVERSION =.*/&-$n/" Makefile
	fi ||
	die "Failed to update the top Makefile"

	cat >$tmpfile <<EOF
#
# You're about to make a new kernel release.
#
# You can amend the commit log now.
#
Kernel Release $tag
EOF
	# The repository is cleaned, so it's safe to use '-a' here.
	if ! git commit -aqs --edit --file=$tmpfile; then
		git checkout -- Makefile
		die "Failed to commit kernel release."
	fi
	if ! git__tag $tag; then
		git reset -q --hard HEAD~1
		die "Failed to create the tag."
	fi
}

kdist__cd_repository kernel &&
kdist__setup_kernel_version ||
exit

git__check_clean_work_tree ||
die "You must have a clean kernel working tree."

release__kernel "$@"
