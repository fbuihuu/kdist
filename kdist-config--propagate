#! /bin/bash

SUMMARY="Propagate a change to specified configs"

USAGE="[-i] [-n|--dry-run] [--type=<type>] [--origin=<pattern>] [<pattern>...]"

stage_opts=
resolve_opts=
origin=
dry_run=

while
	case $1 in
	-i)		stage_opts="-i -p" ;;
	--origin=*)	origin=${1#--origin=} ;;
	--type=*)	resolve_opts="--type=${1#--type=}" ;;
	-n|--dry-run)	dry_run=yes ;;
	-*)		kdist__usage ;;
	*)		break
	esac
do
	shift
done


#
# Depending on where we exit, later we'll need to restore the index's
# previous state if we detect an error.
#
cleanup_on_exit () {
	rm -fr $tmpdir
}

cleanup_on_error () {
	config__restore_repository
	cleanup_on_exit
}

trap cleanup_on_exit 0

tmpdir=$(mktemp -d)

#
# Sanity checks on the current config
#
kdist__cd_repository kernel &&
kernel_path=$(pwd) ||
exit

patch=$tmpdir/diff
kdist config diff --raw $origin >$patch || {
	if test -z "$origin"; then
		warn "Can't generate the patch to propagate, probably because"
		warn "the origin file can't be found. You can try to pass '--origin'."
	fi
	exit 1
}

if ! test -s $patch; then
	die "No local changes to propagate"
fi

#
# Sanity checks on the targets
#
if test $# -eq 0; then
	#
	# No target is specified, use the one matching the current
	# setup.
	#
	default_pattern=$(config__default_pattern .config) &&
	set $default_pattern ||
	exit
fi

targets=$(config__resolve_files $resolve_opts "$@") || exit
if ! test "$targets"; then
	die "No config files match '$@' pattern."
fi

#
# Refuse to process if any files have changes and have not been
# staged since it's currently not possible for git-stash to leave them
# intact (therefore they won't be restored in case of no errors since
# git-apply won't be called).
#
kdist__cd_repository configs

for t in $targets; do
	case $(git status --porcelain -- $t) in
	""|[MARC]" "*)
		# index and work tree matches
		;;
	*)
		die "$t has unstaged changes, exiting ('-f' to force)."
	esac
done

#
# Now we're going to play with the index, so back it up.
#
config__save_repository
trap cleanup_on_error 0

for t in $targets
do
	echo "Patching $t..."
	kdist config apply $t <$patch ||
	die "Failed to patch $t."
done

cd $kernel_path
# This also stages config changes.
kdist config update -f ${stage_opts:+-i} $targets ||
exit

if ! test $dry_run; then
	trap cleanup_on_exit 0
fi
